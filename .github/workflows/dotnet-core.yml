name: Assembly-Bot Actions

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: dotnet build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    #- name: Test
    #  run: dotnet test --no-restore --verbosity normal
  publish:
    name: ssh pull, build and run
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - name: Kill bot
      uses: appleboy/ssh-action@master
      continue-on-error: true
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password : ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
           screen -X -S "assemblybot" quit
    - name: Pull
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password : ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
          cd ~/Assembly-Bot
          git pull
    - name: Build
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password : ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
          cd ~/Assembly-Bot
          /usr/bin/dotnet/dotnet build --force -c Release
    - name: Run Bot
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password : ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
          screen -dmS "assemblybot"
          screen -S "assemblybot" -p 0 -X stuff "cd ~/Assembly-Bot && export DOTNET_ROOT=/usr/bin/dotnet/ && export DOTNET_MULTILEVEL_LOOKUP=0 && export PATH=$PATH:/usr/bin/dotnet/ && dotnet run -c Release \n"