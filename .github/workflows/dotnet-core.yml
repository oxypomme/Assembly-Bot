name: Assembly-Bot Actions

on:
  push:
    branches: [ master ]

jobs:
  #build:
    #name: dotnet build
    #runs-on: ubuntu-latest
    #steps:
    #- uses: actions/checkout@v2
    #- name: Setup .NET Core
    #  uses: actions/setup-dotnet@v1
    #  with:
    #    dotnet-version: 3.1.301
    #- name: Install dependencies
    #  run: dotnet restore
    #- name: Build
    #  run: dotnet build --configuration Release --no-restore
    #- name: Test
    #  run: dotnet test --no-restore --verbosity normal
  publish:
    name: ssh pull, build and run
    runs-on: ubuntu-latest
    #needs: [build]
    steps:
    - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.USERNAME }}
          SSH_KEY: ${{ secrets.KEY }}
          SSH_HOST: ${{ secrets.HOST }}
    - name: Test
      run: whoami
    - name: Pull
      uses: garygrossgarten/github-action-ssh@release
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        privateKey: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        command: cd ~/Assembly-Bot && git pull
    - name: Build
      uses: garygrossgarten/github-action-ssh@release
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        privateKey : ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        command: cd ~/Assembly-Bot && dotnet build
    #- name: Run